openapi: 3.0.0
info:
  description: "Dojot device attribute data recovery service"
  version: 0.0.1
  title: Dojot Time Series Service
tags:
  - name: devices
    description: Device data
paths:
  "/devices/{deviceId}/attrs/{attr}/data":
    get:
      tags:
        - devices
      security:
        - bearerAuth: []
      summary: "Retrieve data from attribute "
      description: "Retrieve data from attribute in dojot Time Series Service"
      operationId: findDataFromAttrInDevice
      parameters:
        - $ref: "#/components/parameters/deviceId"
        - $ref: "#/components/parameters/attr"
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/sort"
      responses:
        "200":
          description: Recovered data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TssResponse"
        "400":
          description: BAD REQUEST
        "403":
          description: Unauthorized - Missing JWT token/Invalid JWT token
        "500":
          description: INTERNAL SERVER ERROR
externalDocs:
  description: Find out more about Dojot
  url: https://dojotdocs.readthedocs.io/
servers:
- url: "{protocol}://{domain}:{port}/{basePath}"
  description: url
  variables:
    protocol:
      default: 'http'
      enum:
        - 'http'
        - 'https'
    domain:
      default: localhost
      description: this value is assigned by the service provider, in this example `localhost`
    port:
      enum:
        - '80'
        - '8443'
        - '443'
        - '8000'
        - '3000'
      default: '8000'
    basePath:
      default: tss/v1
      enum:
        - 'tss/v1'
        - 'api/v1'
components:
  securitySchemes:
    bearerAuth:
      description: Bearer JWT
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  parameters:
    dateFrom:
      name: dateFrom
      in: query
      description: Start time of a time-based query results
      required: false
      examples:
        init:
          summary: Minimum possible date
          value: "1970-01-01T00:00:00.000Z"
        past:
          summary: An example of a date in the past
          value: "2020-10-01T20:40:44.000123456Z"
      schema:
        $ref: '#/components/schemas/IsoDateRestricted'
    dateTo:
      name: dateTo
      in: query
      description: End time of a time-based query results
      required: false
      examples:
        future:
          summary: An example of a date in the future
          value: "2022-10-01T20:40:44.000123456Z"
      schema:
        $ref: '#/components/schemas/IsoDateRestricted'
    limit:
      name: limit
      in: query
      description: Limits the number of returned results by page
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        exclusiveMinimum: true
        default: 256
    page:
      name: page
      in: query
      description: Page to retrieve
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        exclusiveMinimum: true
        default: 1
    sort:
      in: query
      name: sort
      description: |
        Sort by time order:
         * `asc` - Ascending, from oldest to newest
         * `desc` - Descending, from newest to oldest
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    deviceId:
      name: deviceId
      in: path
      description: Device identifier
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 8
        pattern: ^[0-9a-fA-F]*$
    attr:
      name: attr
      in: path
      description: Device attribute to be requested.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 128
        pattern: ^[a-zA-Z0-9_-]+$
  schemas:
    pagination:
      type: object
      properties:
        number:
          type: integer
          minimum: 0
          exclusiveMinimum: true
          default: 1
        url:
          type: string
    IsoDateRestricted:
      type: string
      format: date-time
      pattern: "[1-2][0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])T(2[0-3]|[01][\0-9]):([0-5][0-9]):([0-5][0-9])((\\.[0-9]{1,3})([0-9]{0,6}))?Z"
    TssResponse:
      type: object
      properties:
        paging:
          type: object
          properties:
            previous:
              allOf:
                - $ref: '#/components/schemas/pagination'
                - type: object
                  properties:
                    number:
                      default: null
                    url:
                      default: null
            current:
              allOf:
                - $ref: '#/components/schemas/pagination'
                - type: object
                  properties:
                    number:
                      default: 1
                    url:
                      default: ...
            next:
              allOf:
                - $ref: '#/components/schemas/pagination'
                - type: object
                  properties:
                    number:
                      default: 2
                    url:
                      default: ...
        data:
          type: array
          items:
            type: object
            properties:
              ts:
                $ref: '#/components/schemas/IsoDateRestricted'
              value:
                anyOf:
                  - type: string
                  - type: number
                  - type: integer
                  - type: boolean
                  - type: array
                    items: {}
                  - type: object