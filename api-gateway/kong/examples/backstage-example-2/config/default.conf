
# APP
app.base.url:string=http://localhost:8000
gui.return.url:string=http://localhost:8000/return
gui.home.url:string=http://localhost:8000

# app.node.env=${NODE_ENV:-production}

# Lightship
lightship.detect.kubernetes:boolean=false

#Logger config
log.verbose:boolean=false
log.console.level:string=info
log.file:boolean=false
log.file.level:string=info
log.file.filename:string=backstage-${HOSTNAME:-}-logs-%DATE%.log

#keycloak configuration
keycloak.url.api.gateway:string=http://apigw:8000/auth
keycloak.url.external:string=http://localhost:8000/auth
keycloak.healthcheck.ms:integer=30000
keycloak.public.client.id:string=gui
keycloak.code.challenge.method:string=S256



# SERVER
server.host:string=0.0.0.0
server.port:integer=3000
#server.ca=/certs/ca-cert.pem
#server.key=/certs/server-key.pem
#server.cert=/certs/server-cert.pem
#server.request.cert:boolean=true
#server.reject.unauthorized:boolean=true

#session
session.secret:string=aabcdeddd
session.cookieName:string=dojot-backstage-cookie
session.cookieHTTPS:boolean=false
session.cookiePath:string=/
session.proxy:boolean=true
session.domain:string=localhost

#session redis
session_redis.max.life.time.sec:integer=86400 #One day in seconds.
session_redis.max.idle.time.sec:integer=1800 #30 minutes in seconds


# REDIS
redis.host:string=redis-backstage
redis.port:integer=6379
redis.db:integer=0
redis.connect_timeout:integer=3600000
redis.reconnect.after:integer=5000
# TODO
#redis.tls.ca=/certs/ca-cert.pem
#redis.tls.key=/certs/redis-key.pem
#redis.tls.cert=/certs/redis-cert.pem
#redis.tls.request.cert:boolean=true
#redis.tls.reject.unauthorized:boolean=true


express.trustproxy:boolean=true